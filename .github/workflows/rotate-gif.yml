name: Daily GIF Rotation at KST Midnight

on:
  schedule:
    - cron: "40 15 * * *"  # 한국 시간 00:40
  workflow_dispatch:
  push:
    branches:
      - main


permissions:
  contents: write

jobs:
  rotate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Rotate GIF sequentially
      run: |
        import os
        import shutil
        import datetime
        import re
        from datetime import timezone, timedelta

        # 현재 시간을 KST로 설정
        kst = timezone(timedelta(hours=9))
        utc_time = datetime.datetime.now(timezone.utc)
        kst_time = utc_time.astimezone(kst)
        current_time = kst_time.strftime("%Y-%m-%d %H:%M:%S KST")
        print(f"Workflow running at: {current_time}")

        gif_dir = "gifs"
        index_file = "gif_index.txt"
        target_file = "anime-retro.gif"
        cache_version_file = "cache_version.txt"

        # 자연스러운 숫자 정렬 함수
        def natural_sort_key(filename):
            return [int(text) if text.isdigit() else text.lower() 
                    for text in re.split('([0-9]+)', filename)]

        # GIF 디렉토리 검사
        if not os.path.exists(gif_dir):
            print(f"Creating directory: {gif_dir}")
            os.makedirs(gif_dir)
            print("Please add GIF files to the 'gifs' directory")
            exit(0)

        gifs = sorted([f for f in os.listdir(gif_dir) if f.endswith(".gif")], 
                      key=natural_sort_key)
        print(f"Found {len(gifs)} GIF files: {gifs}")

        if not gifs:
            print("No GIFs found in the 'gifs' directory.")
            exit(0)

        # 인덱스 로딩
        index = 0
        if os.path.exists(index_file):
            try:
                with open(index_file, "r") as f:
                    content = f.read().strip()
                    if content:
                        index = int(content.split('\n')[0])
            except Exception as e:
                print(f"Error reading index file: {e}")

        # 캐시 버전 로딩
        cache_version = 1
        if os.path.exists(cache_version_file):
            try:
                with open(cache_version_file, "r") as f:
                    content = f.read().strip()
                    if content:
                        cache_version = int(content)
            except Exception as e:
                print(f"Error reading cache version file: {e}")

        # 인덱스 계산 및 파일 복사
        index = index % len(gifs)
        selected = gifs[index]
        print(f"Selected GIF: {selected} (index {index})")

        if os.path.exists(target_file):
            os.remove(target_file)

        shutil.copyfile(os.path.join(gif_dir, selected), target_file)
        print(f"Copied {selected} to {target_file}")

        # 인덱스 업데이트
        next_index = (index + 1) % len(gifs)
        with open(index_file, "w") as f:
            f.write(f"{next_index}\n# Last updated: {current_time}")

        # 캐시 버전 업데이트
        new_cache_version = cache_version + 1
        with open(cache_version_file, "w") as f:
            f.write(str(new_cache_version))

        print(f"Updated index to {next_index}")
        print(f"Updated cache version to {new_cache_version}")
        print(f"Next GIF will be: {gifs[next_index]}")

        # README.md 업데이트 (cache-bust)
        if os.path.exists("README.md"):
            try:
                with open("README.md", "r") as f:
                    readme_content = f.read()

                lines = readme_content.split('\n')
                in_comment = False
                new_lines = []

                def update_line(line):
                    # 정확히 anime-retro.gif에만 적용
                    return re.sub(
                        r'(anime-retro\.gif)(\?cache-bust=\d+)?',
                        f'anime-retro.gif?cache-bust={new_cache_version}',
                        line
                    )

                for line in lines:
                    if '<!--' in line:
                        in_comment = True
                    if '-->' in line:
                        in_comment = False
                        new_lines.append(line)
                        continue

                    if not in_comment:
                        new_lines.append(update_line(line))
                    else:
                        new_lines.append(line)

                updated_content = '\n'.join(new_lines)

                with open("README.md", "w") as f:
                    f.write(updated_content)

                print("✅ README.md에 cache-bust 파라미터가 안전하게 갱신되었습니다.")
            except Exception as e:
                print(f"❌ README.md 수정 중 오류 발생: {e}")
      shell: python

    - name: Commit and push
      run: |
        git config user.name "KyuHyeon Sung"
        git config user.email "dmp100@naver.com"
        git add -f anime-retro.gif gif_index.txt cache_version.txt README.md
        git commit -m "Update GIF $(date +%H:%M:%S)"
        git push
